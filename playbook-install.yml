---
- hosts: znuny
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:
  - name: Create user, domain and database
    import_tasks: tasks/hs_basis.yml

  #################################
  ## create directories
  #################################
  - name: create directory znuny
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/znuny"
      state: directory
  - name: create directory etc
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory var/tmp
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory

  ##################################
  ## install znuny
  ##################################

  - name: install znuny
    become: yes
    become_user: "{{pac}}-{{user}}"
    unarchive:
      src: https://download.znuny.org/releases/znuny-{{znuny_release}}.tar.gz
      remote_src: yes
      dest: /home/pacs/{{pac}}/users/{{user}}/znuny
      extra_opts: [--strip-components=1]
      creates: /home/pacs/{{pac}}/users/{{user}}/znuny/Kernel/Config.pm.dist

  ##################################
  ## configuration
  ##################################

  - name: upload znuny configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/znuny/Kernel/Config.pm" src="templates/Config.pm" mode=0600
  - name: upload pgpass file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.pgpass" src="templates/pgpass" mode=0600

  #######################
  ## set file permissions
  #######################
  - name: upload SetPermissions patch
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/SetPermissions.patch" src="templates/SetPermissions.patch" mode=0600

  - name: patch SetPermissions
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      patch -p1 < /home/pacs/{{pac}}/users/{{user}}//SetPermissions.patch || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_SetPermissions_patched
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/znuny/bin"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible_SetPermissions_patched"

  - name: run SetPermissions
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      ./bin/otrs.SetPermissions.pl --otrs-user="{{pac}}-{{user}}" --web-group="{{pac}}" --admin-group="{{pac}}" || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_SetPermissions_run
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/znuny"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible_SetPermissions_run"

  ######################
  ## initialise instance
  ######################
  - name: initialise the database
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      psql --user {{pac}}_{{user}} < scripts/database/otrs-schema.postgresql.sql || exit -1
      psql --user {{pac}}_{{user}} < scripts/database/otrs-initial_insert.postgresql.sql || exit -1
      psql --user {{pac}}_{{user}} < scripts/database/otrs-schema-post.postgresql.sql || exit -1
      ./bin/otrs.Console.pl Maint::Database::Check || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_db_init
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/znuny"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible_db_init"

  - name: initialise the instance
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      ./bin/otrs.Console.pl Maint::Config::Rebuild || exit -1
      ./bin/otrs.Console.pl Admin::User::SetPassword 'root@localhost' {{AdminPasswd}} || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_instance_init
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/znuny"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible_instance_init"

  ########################
  ## setup the apache site
  ########################
  - name: Check for cgi-ssl directory
    become: yes
    become_user: "{{pac}}-{{user}}"
    stat:
      path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/cgi-ssl"
    register: cgissl
  - name: drop cgi-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/cgi-ssl"
       state: absent
    when: cgissl.stat.exists and cgissl.stat.isdir
  - name: create symbolic link for cgi-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/znuny/bin/cgi-bin"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/cgi-ssl"
      state: link

  - name: upload htaccess rewrite rule
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/.htaccess" src="templates/htaccess" mode=0444

  - name: create symbolic link for otrs-web
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/znuny/var/httpd/htdocs"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/otrs-web"
      state: link

  ####################################
  ## install cron jobs
  ####################################
  - name: enable znuny cronjob
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "znuny cronjob"
      minute: "*/5"
      job: "/home/pacs/{{pac}}/users/{{user}}/znuny/bin/otrs.Daemon.pl start >> /dev/null"

  ####################################
  ## fix permissions
  ####################################
  - name: fix file permissions
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      # get the website once, so that the files in znuny/var/httpd/htdocs will be generated
      curl https://{{domain}} > /dev/null || exit -1
      # now set the permissions again
      ./bin/otrs.SetPermissions.pl --otrs-user="{{pac}}-{{user}}" --web-group="{{pac}}" --admin-group="{{pac}}" || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/znuny"
